generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  student
  company
  school
  admin
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  // password String 
  firstName   String
  lastName    String
  imageUrl    String?
  clerkUserId String   @unique
  role        Role
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  posts     Post[]      @relation("UserPosts")
  JoinList JoinList[]
}

enum Category {
  Project
  Thesis
  Internship
}

enum Status {
  approved
  pending
  not_approved
}

enum JoinStatus {
  approved
  pending
  rejected
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  title       String
  description String
  imageUrl    String?
  category    Category
  status      Status   @default(pending)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user      User        @relation("UserPosts", fields: [userId], references: [id], onDelete: Cascade)
  JoinList JoinList[]
}

// join list
model JoinList {
  id        String     @id @default(cuid()) @map("_id")
  postId    String     @db.ObjectId
  userId    String     @db.ObjectId
  status    JoinStatus @default(pending)
  joined_at DateTime   @default(now())
  post      Post       @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  // @@map("joinlist")
  @@unique([postId, userId])
  @@index([postId])
  @@index([userId])
}
